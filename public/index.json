[{"content":"\nIntroduction This guide will mainly be focused around Debian based Linux distributions, such as Linux Mint, Ubuntu, etc, but it should be fairly simple to adapt these instructions to work with your torrent client of choice. We will also be mainly using docker compose for ease of config\nInstalling Docker Installing docker is best done by following the official instructions. These can be found at\nhttps://docs.docker.com/engine/install/\nSetting up torrent clients There are a variety of torrent clients available, and we will be covering 3, qBittorrent, Transmission, Deluge\nSetting up qBittorrent qBittorrent Website First, start by creating a directory where we will be storing our config for qBittorrent\nmkdir qbittorrent-docker Then open the directory and create a docker compose file\ncd qbittorrent-docker nano docker-compose.yml We will be using the LinuxServer.io image, which can be found here\nPaste the following text into the docker-compose.yml\n--- services: qbittorrent: image: lscr.io/linuxserver/qbittorrent:latest container_name: qbittorrent environment: - PUID=1000 - PGID=1000 - TZ=Etc/UTC volumes: - ./config:/config - ./downloads:/downloads ports: - 8080:8080 - 6881:6881 - 6881:6881/udp restart: unless-stopped Change the TZ according to this, and if you want to change the port for the webUI, change 8080:8080 to 6081:8080 or whatever you like.\nIn order to change the torrent port which will need to be port forwarded, change the 6881:6881 and 6881:6881/udp to 50000:6881 and 50000:6881/udp or however you like\nFinally, change the path to downloads to however you like, or leave it default to make it download into qbittorrent-docker/downloads\nNow use the following commands to run the docker container\ndocker compose pull docker compose up Pay attention to the output of the last command, it contains your login password that qBittorrent generated\nIf you get an error similar to docker compose: command not found, try docker-compose ... instead.\nqBittorrent should now be available on http://127.0.0.1:8080 on a local machine and http://ip:8080 on a remote machine\nIf you cannot see the torrent client online, try checking your firewall or port forwarding settings\nWe are not setup just yet though, so just hold on for a little while. Login to the web interface of the torrent client and change the login password to something you have securely stored.\nNow close the qBittorrent instance by pressing CTRL+C in the window where you ran docker compose up, and then run the following command\ndocker compose up -d The -d flag tells docker compose to run our container in the background, so you don\u0026rsquo;t need to keep a terminal window open to keep the torrent client running\nWith that qBittorrent is installed! Continue with further configuration on the web interface or continue to the reverse proxy instructions to connect your torrent client to a domain name and use HTTPS to secure the connection, like https://qbittorrent.domain.tld\nSetting up Deluge Deluge Website Installing Deluge will be almost identical to qBittorrent\nFirst, start by creating a directory where we will be storing our config for Deluge\nmkdir deluge-docker Then open the directory and create a docker compose file\ncd deluge-docker nano docker-compose.yml We will be using the LinuxServer.io image, which can be found here\nPaste the following text into the docker-compose.yml\n--- services: deluge: image: lscr.io/linuxserver/deluge:latest container_name: deluge environment: - PUID=1000 - PGID=1000 - TZ=Etc/UTC - DELUGE_LOGLEVEL=error #optional volumes: - ./config:/config - ./downloads:/downloads ports: - 8112:8112 - 6881:6881 - 6881:6881/udp restart: unless-stopped Change the TZ according to this, and if you want to change the port for the webUI, change 8112:8112 to 6081:8112 or whatever you like.\nIn order to change the torrent port which will need to be port forwarded, change the 6881:6881 and 6881:6881/udp to 50000:6881 and 50000:6881/udp or however you like\nFinally, change the path to downloads to however you like, or leave it default to make it download into deluge-docker/downloads\nNow use the following commands to run the docker container\ndocker compose pull docker compose up -d If you get an error similar to docker compose: command not found, try docker-compose ... instead.\nDeluge should now be available on http://127.0.0.1:8112 on a local machine and http://ip:8112 on a remote machine\nIf you cannot see the torrent client online, try checking your firewall or port forwarding settings\nThe default password is deluge\nReverse Proxy Coming soon :)\n","permalink":"https://fieryeagle.org/posts/1/","summary":"\u003cp\u003e\u003ca href=\"https://ko-fi.com/B0B419O55G\"\u003e\u003cimg alt=\"ko-fi\" loading=\"lazy\" src=\"https://ko-fi.com/img/githubbutton_sm.svg\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eThis guide will mainly be focused around Debian based Linux distributions, such as Linux Mint, Ubuntu, etc, but it should be fairly simple to adapt these instructions to work with your torrent client of choice. We will also be mainly using docker compose for ease of config\u003c/p\u003e\n\u003ch2 id=\"installing-docker\"\u003eInstalling Docker\u003c/h2\u003e\n\u003cp\u003eInstalling docker is best done by following the official instructions. These can be found at\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://docs.docker.com/engine/install/\"\u003ehttps://docs.docker.com/engine/install/\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id=\"setting-up-torrent-clients\"\u003eSetting up torrent clients\u003c/h2\u003e\n\u003cp\u003eThere are a variety of torrent clients available, and we will be covering 3, qBittorrent, Transmission, Deluge\u003c/p\u003e","title":"Installing a torrent client in Docker on Linux"}]